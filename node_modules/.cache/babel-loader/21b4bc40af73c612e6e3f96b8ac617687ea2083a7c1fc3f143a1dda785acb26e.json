{"ast":null,"code":"var _jsxFileName = \"/media/rk/disk2/React/monsters-rolodex/src/App.js\",\n  _s = $RefreshSig$();\n//import { Component } from 'react';\n//import logo from './logo.svg';\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  console.log('render');\n  const [searchField, setSearchField] = useState(''); // [value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  //console.log(searchField);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setMonsters(users));\n  }, []);\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n  const onSearchChange = event => {\n    //console.log(event.target.value);\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Monsters Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: 'monsters-search-box',\n      placeholder: 'Search Monsters',\n      onChangeHandler: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n/*class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    //console.log('constructor');\n  }\n\n  componentDidMount() {\n    //console.log('componentDidMount');\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState(() => {\n          return {monsters: users}\n        }\n      ));\n  }\n\n  onSearchChange = (event) => {\n    //console.log(event.target.value);\n    const searchField = event.target.value.toLocaleLowerCase()\n    \n    this.setState(() => {\n      return {searchField: searchField};\n    })\n  }\n\n  render() {\n    //console.log('render');\n\n    const {monsters, searchField} = this.state;\n    const {onSearchChange} = this;\n\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField)\n    })\n\n    return <div className=\"App\">\n      <h1 className='app-title'>Monsters Rolodex</h1>\n      <SearchBox className={'monsters-search-box'} placeholder={'Search Monsters'} onChangeHandler={onSearchChange} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  }\n}*/\n_s(App, \"YjM+qWSyF3I2IMx5PoA1UagYOq0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","jsxDEV","_jsxDEV","App","_s","console","log","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilteredMonsters","fetch","then","response","json","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChangeHandler","_c","$RefreshReg$"],"sources":["/media/rk/disk2/React/monsters-rolodex/src/App.js"],"sourcesContent":["//import { Component } from 'react';\n//import logo from './logo.svg';\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nconst App = () => {\n  console.log('render');\n  const [searchField, setSearchField] = useState(''); // [value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  //console.log(searchField);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => setMonsters(users));\n  }, []);\n  \n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField])\n\n  const onSearchChange = (event) => {\n    //console.log(event.target.value);\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className='app-title'>Monsters Rolodex</h1>\n      <SearchBox className={'monsters-search-box'} placeholder={'Search Monsters'} onChangeHandler={onSearchChange} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  )\n}\n\n/*class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    //console.log('constructor');\n  }\n\n  componentDidMount() {\n    //console.log('componentDidMount');\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState(() => {\n          return {monsters: users}\n        }\n      ));\n  }\n\n  onSearchChange = (event) => {\n    //console.log(event.target.value);\n    const searchField = event.target.value.toLocaleLowerCase()\n    \n    this.setState(() => {\n      return {searchField: searchField};\n    })\n  }\n\n  render() {\n    //console.log('render');\n\n    const {monsters, searchField} = this.state;\n    const {onSearchChange} = this;\n\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField)\n    })\n\n    return <div className=\"App\">\n      <h1 className='app-title'>Monsters Rolodex</h1>\n      <SearchBox className={'monsters-search-box'} placeholder={'Search Monsters'} onChangeHandler={onSearchChange} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  }\n}*/\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAACY,QAAQ,CAAC;EAClE;;EAEAX,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKP,WAAW,CAACO,KAAK,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,MAAMoB,mBAAmB,GAAGT,QAAQ,CAACU,MAAM,CAAEC,OAAO,IAAK;MACvD,OAAOA,OAAO,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAAChB,WAAW,CAAC;IAC/D,CAAC,CAAC;IAEFK,mBAAmB,CAACM,mBAAmB,CAAC;EAC1C,CAAC,EAAE,CAACT,QAAQ,EAAEF,WAAW,CAAC,CAAC;EAE3B,MAAMiB,cAAc,GAAIC,KAAK,IAAK;IAChC;IACA,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACN,iBAAiB,CAAC,CAAC;IAChEd,cAAc,CAACkB,iBAAiB,CAAC;EACnC,CAAC;EAED,oBACExB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA;MAAI2B,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/ChC,OAAA,CAACF,SAAS;MAAC6B,SAAS,EAAE,qBAAsB;MAACM,WAAW,EAAE,iBAAkB;MAACC,eAAe,EAAEZ;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChHhC,OAAA,CAACH,QAAQ;MAACU,QAAQ,EAAEE;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA9B,EAAA,CApCMD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAoFT,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}